<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="skinCode1.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARYSURBVHhe7ZkxbuswDIZ9p7c+4KFDgR6gQO/QLUDv0bFL
        75C5U07QA3Tr/E7wNj1LjiySpijJVWzZ5vAhgUVKivmLpJ3u7z9jFEWFoDhUCIrjwEL4Nq/3nenu380n
        O34sDimEz7cH03W9CBwP5vWLtxP5ejd3vf/d2zc/vjEOKIRrJhiF0JnnD86OB4uozLdlDpkRzicshO50
        Ye04sO+LOTM2W+SYPcLHCwhmT3afQLLJjvqLYwrhWt+DGDL7BOK3l/7A0rwQQrACnF0ZM/sEkkn20h9Y
        mhQCvNkpRr9rkHJP6Zw+ATeK++kPLE0JAQXmB2SJobhP2G9/YGlGCCgoFcBiuJhnOG6DWNwn4Dn21B9Y
        mhBCCAaGs4VwPhAbLPrcH/hjnn7ja2LNJ8Kp1h98Xcx5zgutyqwuBBgICGc75Zv1hQwnl2SEGEKfUL8/
        AKWmgTKzqhDCjcVwtjHiJz7gT++kQaQIAUG+tQIHsszapWY1IYw3FcDZJZnUep4xlYv2sT6BNIoFbyJT
        BCHP/M+jEqsIIdz4ALYZUnleHc5M+z1hvul7hJFHLsh4jWr9gQPuZb1H0iaEEMamAcq56cmUD0Dz0UfI
        ERIQZHeDkwuzVMVsU8LiQgg3NGCvS7U+JYaYb6wEYDE8sTYWb4fmv1FjB9fIEX9tVhcCHIuLIXEKI3Vf
        6gfCzU6Ulv6EooxzwxMb1lm+RDQlBEs8zUti4Gu+G0uKQegXGG57WoEoFy4RiwqB3lTOxjJHDJzPOB7t
        BYb5JpnoF/iOiK0vZJXSUgL2uuQjZZNCsBSLgQl2anygn++NjNngsfZMyhYfR39KXPi1aVYIljIxXCZ2
        eLwnKgaKnz/vKQY1eqfcNTK5UXNKWU0I3DhHXAz0dE6DxjZcmWKwAeeuxwIT9jmj0YvsSUsDIVcMuNYL
        aTU7M6QJ867X6NVgE0KwZImBBFg8URXF4IFzrv3fQSmbEYL8mOfFQLr3RH2Nv7ewgIzSN4S8jcRyjV4N
        FhWChd4wziaOIIZr0HHmSNdrSQyhMZSbRnidw9u1zMaEYJHFcCaBzXkBRMXApnVaSkgfgMYEoE9LOCEs
        vVG43rw1pTJByGzcnBhEW/rSSM42aA8MnM+a9HviN2rhHGoxd61gmymGis/htGGVG8J8sfL+y+H24b+M
        FyJAxxpwa3hS9uF6zs2u2LTRt4gpkUF7kG3C3uKgeW4AXWvSI4wDwDAFnSMXbq5cwjxpMdR7lKNrpUUG
        +w/aYPrPFNC+BOibhDpDrIH/nMNPfFPAfYp/+lgqvuAZApt+Ggn04jnJmYPd8wL4td0n3FAK6JxDrm3J
        nBa/H4wkhpLArQ//Gwa48ZQPBa7lKRJCDD85XIheo3hfDs7ewtliODFsSwQp8G8bgNf9d+iTQxUhtIUX
        w7be7K3NDoWgzEGFoDhUCIpDhaA4VAiKQ4WgOFQIikOFoDhUCIpDhaA4VAiKQ4WgOFQIikOFoPQY8x80
        P+FWH+CTWAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAACmAAAApgAAAKYAAACmAAAApgAAAKYAAACmAAAApgAA
        AKYAAACmAAAApgAAAKYAAACmAAAApgAAAKYAAACmAAAApgAAAKYAAACmAAAApgAAAKYAAACmAAAApgAA
        AKYAAACmAAAAVAAAAAAAAAAAAAAAAAAAAAAAAABkAAAA3wAAAGYAAABdAAAAXQAAAF0AAABdAAAAXQAA
        AF0AAABdAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAXQAA
        AF0AAABdAAAAXQAAAGkAAADjAAAAVwAAAAAAAAAAAAAAAAAAALkAAABVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGUAAACuAAAAAAAAAAAAAAAAAAAAsAAAAEwAAAAAAAAAAAAA
        ABEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAA
        ACEAAAAhAAAAIQAAACEAAAAhAAAADwAAAAAAAAAAAAAAWgAAAKYAAAAAAAAAAAAAAAAAAACwAAAATwAA
        AAAAAAAZAAAA3wAAANEAAADRAAAA0QAAANEAAADRAAAA0QAAANEAAADRAAAA0QAAANEAAADRAAAA0QAA
        ANEAAADRAAAA0QAAANEAAADRAAAA0QAAANIAAADYAAAAEQAAAAAAAABdAAAApgAAAAAAAAAAAAAAAAAA
        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
        AM4AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAAAEkAAAAAAAAAVwAAAKgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAJAAAA0QAAACEAAAAAAAAAXQAAAKYAAAAAAAAAAAAAAAAAAACwAAAATwAA
        AAAAAAAtAAAAzgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAAggAAAAAAAACSAAAAoQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAADRAAAAIQAAAAAAAABdAAAApgAAAAAAAAAAAAAAAAAA
        ALAAAABPAAAAAAAAAC0AAADOAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAADWAAAAxQAA
        ANIAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAANEAAAAhAAAAAAAAAF0AAACmAAAAAAAA
        AAAAAAAAAAAAsAAAAE8AAAAAAAAALQAAAM4AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA0AAAA8AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAA0QAAACEAAAAAAAAAXQAA
        AKYAAAAAAAAAAAAAAAAAAACwAAAATwAAAAAAAAAtAAAAzgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAADRAAAAIQAA
        AAAAAABdAAAApgAAAAAAAAAAAAAAAAAAALAAAABPAAAAAAAAAC8AAADNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ANEAAAAiAAAAAAAAAF0AAACmAAAAAAAAAAAAAAAAAAAAsAAAAE8AAAAAAAAAIwAAAPEAAACxAAAAsQAA
        ALEAAACxAAAAsQAAALEAAACxAAAAsQAAALEAAACxAAAAsQAAALEAAACxAAAAsQAAALEAAACxAAAAsQAA
        ALEAAAC0AAAA7AAAABgAAAAAAAAAXQAAAKYAAAAAAAAAAAAAAAAAAACwAAAATAAAAAAAAAACAAAANwAA
        AE0AAABNAAAATQAAAE0AAABNAAAATQAAAE0AAABNAAAATQAAAE0AAABNAAAATQAAAE0AAABNAAAATQAA
        AE0AAABNAAAATQAAAEwAAAA0AAAAAQAAAAAAAABaAAAApgAAAAAAAAAAAAAAAAAAALkAAABRAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEAAACuAAAAAAAAAAAAAAAAAAAAbAAA
        ANoAAABYAAAATwAAAE8AAABPAAAATwAAAE8AAABPAAAATwAAAE8AAABPAAAATwAAAE8AAABPAAAATwAA
        AE8AAABPAAAATwAAAE8AAABPAAAATwAAAE8AAABPAAAATwAAAE8AAABbAAAA3wAAAF8AAAAAAAAAAAAA
        AAAAAAAAAAAAagAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAA
        ALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAABiAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAAAPAAAABz///+cwAABnIAAAJyAAACcn//4nI/3+JyPwficj8
        H4nI/J+JyPyficjAgYnIgICJyJ/8iciBwInIwIGJyPCHicj8n4nI/J+JyPwficj+P4nI//+Jyf//ycgA
        AAnIAAAJz///+cAAAAHgAAAD//////////8=
</value>
  </data>
</root>